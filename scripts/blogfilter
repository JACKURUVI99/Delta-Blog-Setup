#!/bin/bash

author="$1"
mod_user="$(whoami)"
home="/home/authors/$author"
public_dir="$home/public"
blogs_file="$home/blogs.yaml"
mod_home="/home/mods/$mod_user"
blacklist_file="$mod_home/blacklist.txt"
patch_dir="$mod_home/patches"

if [[ -z "$author" ]]; then
    echo "Usage: $0 <author_username>"
    exit 1
fi

if [[ ! -f "$blacklist_file" ]]; then
    mkdir -p "$mod_home"
    touch "$blacklist_file"
    chown "$mod_user:$mod_user" "$blacklist_file"
    chmod 700 "$blacklist_file"
    echo "Blacklist file created at $blacklist_file"
    exit 1
fi

if [[ ! -d "$public_dir" ]]; then
    echo "Author $author has no public blogs."
    exit 1
fi

mkdir -p "$patch_dir"

for blog_path in "$public_dir"/*; do
    [[ -f "$blog_path" ]] || continue
    blogname=$(basename "$blog_path")
    blog_full="$home/blogs/$blogname"
    match_count=0

    while IFS= read -r match; do
        lineno=$(echo "$match" | cut -d: -f1)
        line=$(echo "$match" | cut -d: -f2-)
        for word in $(grep -o -i -f "$blacklist_file" <<< "$line"); do
            echo "Found blacklisted word $word in $blogname at line $lineno"
            match_count=$((match_count + 1))
        done
    done < <(grep -in -I -f "$blacklist_file" "$blog_path" 2>/dev/null)

    if [[ "$match_count" -gt 5 ]]; then
        unlink "$blog_path" 2>/dev/null

        patch_file="$patch_dir/patch_${blogname%.txt}.yaml"
        cat > "$patch_file" <<EOF
blogs:
  - file_name: "$blogname"
    publish_status: false
    mod_comment: "Found $match_count blacklisted words"
EOF

        echo "Blog $blogname is archived due to excessive blacklisted words"
        echo "Patch file created: $patch_file (Apply manually to $blogs_file)"
        continue
    fi

    if [[ "$match_count" -gt 0 ]]; then
        for f in "$blog_path" "$blog_full"; do
            [[ -f "$f" ]] || continue
            tmp_sed=$(mktemp)
            while IFS= read -r word; do
                word=$(echo "$word" | xargs)  # trim
                [[ -z "$word" ]] && continue
                escaped=$(printf '%s\n' "$word" | sed -e 's/[][\/.^$*+?|(){}]/\\&/g')
                stars=$(printf "%${#word}s" | tr ' ' '*')
                echo "s/$escaped/$stars/Ig" >> "$tmp_sed"
            done < "$blacklist_file"
            sed -i -f "$tmp_sed" "$f"
            rm -f "$tmp_sed"
        done
    fi
done
