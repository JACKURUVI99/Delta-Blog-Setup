#!/bin/bash

if ! groups "$(whoami)" | grep -qw "g_admin"; then
  echo "Only admins can run this script."
  exit 1
fi

month=$(date +%m)
day=$(date +%d)
weekday=$(date +%u)

if [[ "$month" != "02" && "$month" != "05" && "$month" != "08" && "$month" != "11" ]]; then
  exit 0
fi

if [[ "$weekday" -eq 4 ]]; then
  :
elif [[ "$weekday" -eq 6 && "$day" -le 7 ]]; then
  :
elif [[ "$weekday" -eq 6 ]]; then
  last_saturday=$(date -d "$(date +%Y-%m-01) +1 month -1 day" +%d)
  while [[ $(date -d "$(date +%Y-%m)-$last_saturday" +%u) -ne 6 ]]; do
    ((last_saturday--))
  done
  if [[ "$day" -ne "$last_saturday" ]]; then
    exit 0
  fi
else
  exit 0
fi

REPORT_DIR="/scripts/reports"
mkdir -p "$REPORT_DIR"
timestamp=$(date "+%Y-%m-%d_%H-%M-%S")
REPORT_OUTPUT="$REPORT_DIR/$timestamp.yaml"

cat <<EOF > "$REPORT_OUTPUT"
blogs: []
categories: {}
top_articles: []
total_published: 0
total_deleted: 0
EOF

tmp_blog=$(mktemp)
tmp_cat=$(mktemp)
echo "{}" > "$tmp_cat"

authors=($(ls -1p /home/authors | grep '/$' | sed 's#/##'))

for author in "${authors[@]}"; do
  blogs_yaml="/home/authors/$author/blogs.yaml"
  [[ -f "$blogs_yaml" ]] || continue

  blog_count=$(yq '.blogs | length' "$blogs_yaml")
  for ((i = 0; i < blog_count; i++)); do
    file_name=$(yq ".blogs[$i].file_name" "$blogs_yaml")
    status=$(yq ".blogs[$i].publish_status" "$blogs_yaml")
    cat_order=($(yq ".blogs[$i].cat_order[]" "$blogs_yaml"))
    blog_path="/home/authors/$author/public/$file_name"

    read_count=0
    for log_file in /home/users/*/blog_reads.log; do
      [[ -f "$log_file" ]] || continue
      count=$(grep -c "$blog_path" "$log_file" || true)
      ((read_count += count))
    done

    cat_names=()
    for index in "${cat_order[@]}"; do
      cname=$(yq ".categories[$index]" "$blogs_yaml")
      [[ "$cname" == "null" || -z "$cname" ]] && cname="Uncategorized"
      cat_names+=("$cname")

      if yq e ".\"$cname\"" "$tmp_cat" | grep -q "null"; then
        yq -i ".\"$cname\" = 1" "$tmp_cat"
      else
        yq -i ".\"$cname\" += 1" "$tmp_cat"
      fi
    done

    cats_yaml=$(printf -- "- \"%s\"\n" "${cat_names[@]}")
    blog_entry=$(cat <<EOF
file_name: "$file_name"
author: "$author"
publish_status: $status
categories:
$cats_yaml
reads: $read_count
EOF
)
    tmp_entry=$(mktemp)
    echo "$blog_entry" > "$tmp_entry"
    yq -i ".blogs += [load(\"$tmp_entry\")]" "$REPORT_OUTPUT"
    rm -f "$tmp_entry"
  done
done

yq -i ".categories = load(\"$tmp_cat\")" "$REPORT_OUTPUT"
rm -f "$tmp_cat"

yq -i '.blogs |= sort_by(.reads) | reverse' "$REPORT_OUTPUT"

top3=$(mktemp)
yq '.blogs[:3]' "$REPORT_OUTPUT" > "$top3"
yq -i ".top_articles = load(\"$top3\")" "$REPORT_OUTPUT"
rm -f "$top3"

pub_count=$(yq '[.blogs[] | select(.publish_status == true)] | length' "$REPORT_OUTPUT")
del_count=$(yq '[.blogs[] | select(.publish_status == false)] | length' "$REPORT_OUTPUT")
yq -i ".total_published = $pub_count | .total_deleted = $del_count" "$REPORT_OUTPUT"

echo "Report generated: $REPORT_OUTPUT"
